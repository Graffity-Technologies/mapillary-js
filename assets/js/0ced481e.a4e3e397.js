(self.webpackChunkmapillary_js_doc=self.webpackChunkmapillary_js_doc||[]).push([[75],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return s},kt:function(){return k}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var m=r.createContext({}),o=function(e){var t=r.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=o(e.components);return r.createElement(m.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,m=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=o(a),k=n,u=c["".concat(m,".").concat(k)]||c[k]||d[k]||i;return a?r.createElement(u,l(l({ref:t},s),{},{components:a})):r.createElement(u,l({ref:t},s))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=c;var p={};for(var m in t)hasOwnProperty.call(t,m)&&(p[m]=t[m]);p.originalType=e,p.mdxType="string"==typeof e?e:n,l[1]=p;for(var o=2;o<i;o++)l[o]=a[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},7050:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return l},metadata:function(){return p},toc:function(){return m},default:function(){return s}});var r=a(2122),n=a(9756),i=(a(7294),a(3905)),l={id:"api",title:"Module: api",sidebar_label:"api",sidebar_position:0,custom_edit_url:null},p={unversionedId:"modules/api",id:"modules/api",isDocsHomePage:!1,title:"Module: api",description:"description",source:"@site/api/modules/api.md",sourceDirName:"modules",slug:"/modules/api",permalink:"/mapillary-js/api/modules/api",editUrl:null,version:"current",sidebar_label:"api",sidebarPosition:0,frontMatter:{id:"api",title:"Module: api",sidebar_label:"api",sidebar_position:0,custom_edit_url:null},sidebar:"api",previous:{title:"MapillaryJS - v4.0.0-beta.5",permalink:"/mapillary-js/api/"},next:{title:"Module: component",permalink:"/mapillary-js/api/modules/component"}},m=[{value:"Namespaces",id:"namespaces",children:[]},{value:"Classes",id:"classes",children:[]},{value:"Interfaces",id:"interfaces",children:[]},{value:"Type aliases",id:"type-aliases",children:[{value:"ImageTilesContract",id:"imagetilescontract",children:[]},{value:"ImagesContract",id:"imagescontract",children:[]},{value:"ProviderEventType",id:"providereventtype",children:[]},{value:"SequenceContract",id:"sequencecontract",children:[]},{value:"SpatialImagesContract",id:"spatialimagescontract",children:[]}]},{value:"Events",id:"events",children:[{value:"ProviderCellEvent",id:"providercellevent",children:[]},{value:"ProviderEvent",id:"providerevent",children:[]}]},{value:"Functions",id:"functions",children:[{value:"decompress",id:"decompress",children:[]},{value:"enuToGeodetic",id:"enutogeodetic",children:[]},{value:"fetchArrayBuffer",id:"fetcharraybuffer",children:[]},{value:"geodeticToEnu",id:"geodetictoenu",children:[]},{value:"readMeshPbf",id:"readmeshpbf",children:[]}]}],o={toc:m};function s(e){var t=e.components,a=(0,n.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))),(0,i.kt)("p",null,"API module"),(0,i.kt)("p",null,"Classes and interfaces for extending Mapillary JS with\ncustom data providers loading and converting data in\nany format."),(0,i.kt)("p",null,"Geo coords"),(0,i.kt)("p",null,"Converts coordinates between the geodetic (WGS84),\nEarth-Centered, Earth-Fixed (ECEF) and local topocentric\nEast, North, Up (ENU) reference frames."),(0,i.kt)("p",null,"The WGS84 has longitude (degrees), latitude (degrees) and\naltitude (meters) values."),(0,i.kt)("p",null,"The ECEF Z-axis pierces the north pole and the\nXY-axis defines the equatorial plane. The X-axis extends\nfrom the geocenter to the intersection of the Equator and\nthe Greenwich Meridian. All values in meters."),(0,i.kt)("p",null,"The WGS84 parameters are:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"a = 6378137\nb = a * (1 - f)\nf = 1 / 298.257223563\ne = Math.sqrt((a^2 - b^2) / a^2)\ne' = Math.sqrt((a^2 - b^2) / b^2)\n")),(0,i.kt)("p",null,"The WGS84 to ECEF conversion is performed using the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"X = (N - h) * cos(phi) * cos(lambda)\nY = (N + h) * cos(phi) * sin(lambda)\nZ = (b^2 * N / a^2 + h) * sin(phi)\n")),(0,i.kt)("p",null,"where"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"phi = latitude\nlambda = longitude\nh = height above ellipsoid (altitude)\nN = Radius of curvature (meters)\n  = a / Math.sqrt(1 - e^2 * sin(phi)^2)\n")),(0,i.kt)("p",null,"The ECEF to WGS84 conversion is performed using the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"phi = arctan((Z + e'^2 * b * sin(theta)^3) / (p - e^2 * a * cos(theta)^3))\nlambda = arctan(Y / X)\nh = p / cos(phi) - N\n")),(0,i.kt)("p",null,"where"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"p = Math.sqrt(X^2 + Y^2)\ntheta = arctan(Z * a / p * b)\n")),(0,i.kt)("p",null,"In the ENU reference frame the x-axis points to the\nEast, the y-axis to the North and the z-axis Up. All values\nin meters."),(0,i.kt)("p",null,"The ECEF to ENU conversion is performed using the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"    |       -sin(lambda_r)                cos(lambda_r)             0      |\nT = | -sin(phi_r) * cos(lambda_r)  -sin(phi_r) * sin(lambda_r)  cos(phi_r) |\n    |  cos(phi_r) * cos(lambda_r)   cos(phi_r) * sin(lambda_r)  sin(phi_r) |\n\n    | X - X_r |\nV = | Y - Y_r |\n    | Z - Z_r |\n\n| x |\n| y | = T * V\n| z |\n")),(0,i.kt)("p",null,"where"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"phi_r = latitude of reference\nlambda_r = longitude of reference\nX_r, Y_r, Z_r = ECEF coordinates of reference\n")),(0,i.kt)("p",null,"The ENU to ECEF conversion is performed by solving the\nabove equation for X, Y, Z."),(0,i.kt)("p",null,"WGS84 to ENU and ENU to WGS84 are two step conversions\nwith ECEF calculated in the first step for both conversions."),(0,i.kt)("h2",{id:"namespaces"},"Namespaces"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/modules/api.tilemath"},"TileMath"))),(0,i.kt)("h2",{id:"classes"},"Classes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/classes/api.dataproviderbase"},"DataProviderBase")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/classes/api.falcordataprovider"},"FalcorDataProvider")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/classes/api.geohashgeometryprovider"},"GeohashGeometryProvider")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/classes/api.geometryproviderbase"},"GeometryProviderBase")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/classes/api.s2geometryprovider"},"S2GeometryProvider"))),(0,i.kt)("h2",{id:"interfaces"},"Interfaces"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.cameraent"},"CameraEnt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.clustercontract"},"ClusterContract")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.coreimageent"},"CoreImageEnt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.coreimagescontract"},"CoreImagesContract")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.creatorent"},"CreatorEnt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.entcontract"},"EntContract")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.falcordataprovideroptions"},"FalcorDataProviderOptions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.ident"},"IDEnt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.imageent"},"ImageEnt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.imagetileent"},"ImageTileEnt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.imagetilesrequestcontract"},"ImageTilesRequestContract")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.lnglat"},"LngLat")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.lnglatalt"},"LngLatAlt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.meshcontract"},"MeshContract")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.pointcontract"},"PointContract")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.sequenceent"},"SequenceEnt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.spatialimageent"},"SpatialImageEnt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.tilecoords2d"},"TileCoords2D")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.tilecoords3d"},"TileCoords3D")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.tileimagesize"},"TileImageSize")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.tilelevel"},"TileLevel")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.tilelevelcolumnrows"},"TileLevelColumnRows")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.tilepixelcoords2d"},"TilePixelCoords2D")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/mapillary-js/api/interfaces/api.urlent"},"URLEnt"))),(0,i.kt)("h2",{id:"type-aliases"},"Type aliases"),(0,i.kt)("h3",{id:"imagetilescontract"},"ImageTilesContract"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"ImageTilesContract"),": ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.entcontract"},(0,i.kt)("em",{parentName:"a"},"EntContract")),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.imagetileent"},(0,i.kt)("em",{parentName:"a"},"ImageTileEnt")),"[]",">"),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/ef7759c2/src/api/contracts/ImageTilesContract.ts#L4"},"api/contracts/ImageTilesContract.ts:4")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"imagescontract"},"ImagesContract"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"ImagesContract"),": ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.entcontract"},(0,i.kt)("em",{parentName:"a"},"EntContract")),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.imageent"},(0,i.kt)("em",{parentName:"a"},"ImageEnt")),">","[]"),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/ef7759c2/src/api/contracts/ImagesContract.ts#L4"},"api/contracts/ImagesContract.ts:4")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"providereventtype"},"ProviderEventType"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"ProviderEventType"),": ",(0,i.kt)("inlineCode",{parentName:"p"},'"datacreate"')),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/ef7759c2/src/api/events/ProviderEventType.ts#L1"},"api/events/ProviderEventType.ts:1")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"sequencecontract"},"SequenceContract"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"SequenceContract"),": ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.sequenceent"},(0,i.kt)("em",{parentName:"a"},"SequenceEnt"))),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/ef7759c2/src/api/contracts/SequenceContract.ts#L3"},"api/contracts/SequenceContract.ts:3")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"spatialimagescontract"},"SpatialImagesContract"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"SpatialImagesContract"),": ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.entcontract"},(0,i.kt)("em",{parentName:"a"},"EntContract")),"<",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.spatialimageent"},(0,i.kt)("em",{parentName:"a"},"SpatialImageEnt")),">","[]"),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/ef7759c2/src/api/contracts/SpatialImagesContract.ts#L4"},"api/contracts/SpatialImagesContract.ts:4")),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)("h3",{id:"providercellevent"},"ProviderCellEvent"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"ProviderCellEvent"),": ",(0,i.kt)("em",{parentName:"p"},"object")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/ef7759c2/src/api/events/ProviderCellEvent.ts#L6"},"api/events/ProviderCellEvent.ts:6")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"providerevent"},"ProviderEvent"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"ProviderEvent"),": ",(0,i.kt)("em",{parentName:"p"},"object")),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/ef7759c2/src/api/events/ProviderEvent.ts#L7"},"api/events/ProviderEvent.ts:7")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"decompress"},"decompress"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"decompress"),"<T",">","(",(0,i.kt)("inlineCode",{parentName:"p"},"buffer"),": ArrayBuffer): T"),(0,i.kt)("p",null,"Decompress and parse an array buffer containing zipped\njson data and return as a json object."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," Handles array buffers continaing zipped json\ndata."),(0,i.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T"))))),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"buffer")),(0,i.kt)("td",{parentName:"tr",align:"left"},"ArrayBuffer"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Array buffer to decompress.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," T"),(0,i.kt)("p",null,"Parsed object."),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/ef7759c2/src/api/Common.ts#L16"},"api/Common.ts:16")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"enutogeodetic"},"enuToGeodetic"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"enuToGeodetic"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"x"),": ",(0,i.kt)("em",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"y"),": ",(0,i.kt)("em",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"z"),": ",(0,i.kt)("em",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"refLng"),": ",(0,i.kt)("em",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"refLat"),": ",(0,i.kt)("em",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"refAlt"),": ",(0,i.kt)("em",{parentName:"p"},"number"),"): ",(0,i.kt)("em",{parentName:"p"},"number"),"[]"),(0,i.kt)("p",null,"Convert coordinates from local topocentric (ENU) reference to\ngeodetic (WGS84) reference."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"x")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Topocentric ENU coordinate in East direction.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"y")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Topocentric ENU coordinate in North direction.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"z")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Topocentric ENU coordinate in Up direction.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"refLng")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Reference longitude in degrees.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"refLat")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Reference latitude in degrees.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"refAlt")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Reference altitude in meters.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"number"),"[]"),(0,i.kt)("p",null,"The longitude, latitude in degrees\nand altitude in meters."),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/ef7759c2/src/geo/GeoCoords.ts#L54"},"geo/GeoCoords.ts:54")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"fetcharraybuffer"},"fetchArrayBuffer"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"fetchArrayBuffer"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"url"),": ",(0,i.kt)("em",{parentName:"p"},"string"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"abort?"),": ",(0,i.kt)("em",{parentName:"p"},"Promise"),"<void",">","): ",(0,i.kt)("em",{parentName:"p"},"Promise"),"<ArrayBuffer",">"),(0,i.kt)("p",null,"Retrieves a resource as an array buffer and returns a promise\nto the buffer."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," Rejects the promise on request failure."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"url")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"URL for resource to retrieve.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"abort?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"Promise"),"<void",">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"Promise"),"<ArrayBuffer",">"),(0,i.kt)("p",null,"Promise to the array buffer\nresource."),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/ef7759c2/src/api/Common.ts#L35"},"api/Common.ts:35")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"geodetictoenu"},"geodeticToEnu"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"geodeticToEnu"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"lng"),": ",(0,i.kt)("em",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"lat"),": ",(0,i.kt)("em",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"alt"),": ",(0,i.kt)("em",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"refLng"),": ",(0,i.kt)("em",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"refLat"),": ",(0,i.kt)("em",{parentName:"p"},"number"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"refAlt"),": ",(0,i.kt)("em",{parentName:"p"},"number"),"): ",(0,i.kt)("em",{parentName:"p"},"number"),"[]"),(0,i.kt)("p",null,"Convert coordinates from geodetic (WGS84) reference to local topocentric\n(ENU) reference."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lng")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Longitude in degrees.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"lat")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Latitude in degrees.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"alt")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Altitude in meters.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"refLng")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Reference longitude in degrees.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"refLat")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Reference latitude in degrees.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"refAlt")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Reference altitude in meters.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("em",{parentName:"p"},"number"),"[]"),(0,i.kt)("p",null,"The x, y, z local topocentric ENU coordinates."),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/ef7759c2/src/geo/GeoCoords.ts#L18"},"geo/GeoCoords.ts:18")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"readmeshpbf"},"readMeshPbf"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"readMeshPbf"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"buffer"),": ArrayBuffer): ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.meshcontract"},(0,i.kt)("em",{parentName:"a"},"MeshContract"))),(0,i.kt)("p",null,"Read the fields of a protobuf array buffer into a mesh\nobject."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"buffer")),(0,i.kt)("td",{parentName:"tr",align:"left"},"ArrayBuffer"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Protobuf array buffer to read from.")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns:")," ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.meshcontract"},(0,i.kt)("em",{parentName:"a"},"MeshContract"))),(0,i.kt)("p",null,"Mesh object."),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/ef7759c2/src/api/Common.ts#L82"},"api/Common.ts:82")))}s.isMDXComponent=!0}}]);