(self.webpackChunkmapillary_js_doc=self.webpackChunkmapillary_js_doc||[]).push([[3428],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return c},kt:function(){return g}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(a),g=n,f=d["".concat(l,".").concat(g)]||d[g]||u[g]||i;return a?r.createElement(f,o(o({ref:t},c),{},{components:a})):r.createElement(f,o({ref:t},c))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1641:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},metadata:function(){return s},toc:function(){return l},default:function(){return c}});var r=a(2122),n=a(9756),i=(a(7294),a(3905)),o={id:"viewer.navigationedgestatus",title:"Interface: NavigationEdgeStatus",sidebar_label:"NavigationEdgeStatus",custom_edit_url:null},s={unversionedId:"interfaces/viewer.navigationedgestatus",id:"interfaces/viewer.navigationedgestatus",isDocsHomePage:!1,title:"Interface: NavigationEdgeStatus",description:"viewer.NavigationEdgeStatus",source:"@site/api/interfaces/viewer.navigationedgestatus.md",sourceDirName:"interfaces",slug:"/interfaces/viewer.navigationedgestatus",permalink:"/mapillary-js/api/interfaces/viewer.navigationedgestatus",editUrl:null,version:"current",sidebar_label:"NavigationEdgeStatus",frontMatter:{id:"viewer.navigationedgestatus",title:"Interface: NavigationEdgeStatus",sidebar_label:"NavigationEdgeStatus",custom_edit_url:null},sidebar:"api",previous:{title:"Interface: NavigationEdgeData",permalink:"/mapillary-js/api/interfaces/viewer.navigationedgedata"},next:{title:"Interface: PointOfView",permalink:"/mapillary-js/api/interfaces/viewer.pointofview"}},l=[{value:"Properties",id:"properties",children:[{value:"cached",id:"cached",children:[]},{value:"edges",id:"edges",children:[]}]}],p={toc:l};function c(e){var t=e.components,a=(0,n.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/modules/viewer"},"viewer"),".NavigationEdgeStatus"),(0,i.kt)("p",null,"Interface that indicates edge status."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"interface"))," NavigationEdgeStatus"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"cached"},"cached"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"cached"),": ",(0,i.kt)("em",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Value indicating whether the edges have been cached."),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/4a51ddef/src/graph/interfaces/NavigationEdgeStatus.ts#L12"},"graph/interfaces/NavigationEdgeStatus.ts:12")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"edges"},"edges"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"edges"),": ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.navigationedge"},(0,i.kt)("em",{parentName:"a"},"NavigationEdge")),"[]"),(0,i.kt)("p",null,"The edges."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," If the cached property is false the edges\nproperty will always be an empty array. If the cached\nproperty is true, there will exist edges in the the\narray if the image has edges."),(0,i.kt)("p",null,"Defined in: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/4a51ddef/src/graph/interfaces/NavigationEdgeStatus.ts#L22"},"graph/interfaces/NavigationEdgeStatus.ts:22")))}c.isMDXComponent=!0}}]);