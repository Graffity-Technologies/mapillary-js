(self.webpackChunkmapillary_js_doc=self.webpackChunkmapillary_js_doc||[]).push([[3428],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),g=a,f=d["".concat(s,".").concat(g)]||d[g]||u[g]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1641:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o={id:"viewer.navigationedgestatus",title:"Interface: NavigationEdgeStatus",sidebar_label:"NavigationEdgeStatus",custom_edit_url:null},l=void 0,s={unversionedId:"interfaces/viewer.navigationedgestatus",id:"interfaces/viewer.navigationedgestatus",isDocsHomePage:!1,title:"Interface: NavigationEdgeStatus",description:"viewer.NavigationEdgeStatus",source:"@site/api/interfaces/viewer.navigationedgestatus.md",sourceDirName:"interfaces",slug:"/interfaces/viewer.navigationedgestatus",permalink:"/mapillary-js/api/interfaces/viewer.navigationedgestatus",editUrl:null,version:"current",frontMatter:{id:"viewer.navigationedgestatus",title:"Interface: NavigationEdgeStatus",sidebar_label:"NavigationEdgeStatus",custom_edit_url:null},sidebar:"api",previous:{title:"NavigationEdgeData",permalink:"/mapillary-js/api/interfaces/viewer.navigationedgedata"},next:{title:"PointOfView",permalink:"/mapillary-js/api/interfaces/viewer.pointofview"}},c=[{value:"Properties",id:"properties",children:[{value:"cached",id:"cached",children:[]},{value:"edges",id:"edges",children:[]}]}],p={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/modules/viewer"},"viewer"),".NavigationEdgeStatus"),(0,i.kt)("p",null,"Interface that indicates edge status."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"interface"))," NavigationEdgeStatus"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"cached"},"cached"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"cached"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Value indicating whether the edges have been cached."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/graph/interfaces/NavigationEdgeStatus.ts#L12"},"graph/interfaces/NavigationEdgeStatus.ts:12")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"edges"},"edges"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"edges"),": ",(0,i.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.navigationedge"},"NavigationEdge"),"[]"),(0,i.kt)("p",null,"The edges."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"description"))," If the cached property is false the edges\nproperty will always be an empty array. If the cached\nproperty is true, there will exist edges in the the\narray if the image has edges."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/graph/interfaces/NavigationEdgeStatus.ts#L22"},"graph/interfaces/NavigationEdgeStatus.ts:22")))}u.isMDXComponent=!0}}]);