(self.webpackChunkmapillary_js_doc=self.webpackChunkmapillary_js_doc||[]).push([[7138],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return u}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),s=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return i.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=s(n),u=r,k=c["".concat(l,".").concat(u)]||c[u]||m[u]||a;return n?i.createElement(k,o(o({ref:t},d),{},{components:n})):i.createElement(k,o({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<a;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3710:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return s},default:function(){return m}});var i=n(2122),r=n(9756),a=(n(7294),n(3905)),o={id:"viewer.vieweroptions",title:"Interface: ViewerOptions",sidebar_label:"ViewerOptions",custom_edit_url:null},p=void 0,l={unversionedId:"interfaces/viewer.vieweroptions",id:"interfaces/viewer.vieweroptions",isDocsHomePage:!1,title:"Interface: ViewerOptions",description:"viewer.ViewerOptions",source:"@site/api/interfaces/viewer.vieweroptions.md",sourceDirName:"interfaces",slug:"/interfaces/viewer.vieweroptions",permalink:"/mapillary-js/api/interfaces/viewer.vieweroptions",editUrl:null,version:"current",frontMatter:{id:"viewer.vieweroptions",title:"Interface: ViewerOptions",sidebar_label:"ViewerOptions",custom_edit_url:null},sidebar:"api",previous:{title:"ViewerNavigationEdgeEvent",permalink:"/mapillary-js/api/interfaces/viewer.viewernavigationedgeevent"},next:{title:"ViewerStateEvent",permalink:"/mapillary-js/api/interfaces/viewer.viewerstateevent"}},s=[{value:"Properties",id:"properties",children:[{value:"accessToken",id:"accesstoken",children:[]},{value:"cameraControls",id:"cameracontrols",children:[]},{value:"combinedPanning",id:"combinedpanning",children:[]},{value:"component",id:"component",children:[]},{value:"container",id:"container",children:[]},{value:"dataProvider",id:"dataprovider",children:[]},{value:"imageId",id:"imageid",children:[]},{value:"imageTiling",id:"imagetiling",children:[]},{value:"renderMode",id:"rendermode",children:[]},{value:"sprite",id:"sprite",children:[]},{value:"trackResize",id:"trackresize",children:[]},{value:"transitionMode",id:"transitionmode",children:[]},{value:"url",id:"url",children:[]}]}],d={toc:s};function m(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/mapillary-js/api/modules/viewer"},"viewer"),".ViewerOptions"),(0,a.kt)("p",null,"Interface for the options that can be provided to the ",(0,a.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.viewer-1"},"Viewer"),"."),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"accesstoken"},"accessToken"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"accessToken"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Optional access token for API requests of\nresources."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"description"))," Can be a user access token or\na client access token."),(0,a.kt)("p",null,"A Mapillary client access token can be obtained\nby ",(0,a.kt)("a",{parentName:"p",href:"https://www.mapillary.com/app/?login=true"},"signing in")," and\n",(0,a.kt)("a",{parentName:"p",href:"https://www.mapillary.com/dashboard/developers"},"registering an application"),"."),(0,a.kt)("p",null,"The access token can also be set through the\n",(0,a.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/viewer.viewer-1#setaccesstoken"},"Viewer.setAccessToken")," method."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/viewer/options/ViewerOptions.ts#L27"},"viewer/options/ViewerOptions.ts:27")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"cameracontrols"},"cameraControls"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"cameraControls"),": ",(0,a.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/viewer.cameracontrols"},"CameraControls")),(0,a.kt)("p",null,"Value specifying the initial camera controls of\nthe viewer."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"default"))," ",(0,a.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/viewer.cameracontrols#street"},"CameraControls.Street")),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/viewer/options/ViewerOptions.ts#L35"},"viewer/options/ViewerOptions.ts:35")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"combinedpanning"},"combinedPanning"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"combinedPanning"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Value specifying if combined panning should be activated."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"default"))," true"),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/viewer/options/ViewerOptions.ts#L42"},"viewer/options/ViewerOptions.ts:42")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"component"},"component"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"component"),": ",(0,a.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.componentoptions"},"ComponentOptions")),(0,a.kt)("p",null,"Component options."),(0,a.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/viewer/options/ViewerOptions.ts#L47"},"viewer/options/ViewerOptions.ts:47")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"container"},"container"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"container"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,a.kt)("inlineCode",{parentName:"p"},"HTMLElement")),(0,a.kt)("p",null,"The HTML element in which MapillaryJS will render the\nviewer, or the element's string ",(0,a.kt)("inlineCode",{parentName:"p"},"id"),". The\nspecified element must have no children."),(0,a.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/viewer/options/ViewerOptions.ts#L54"},"viewer/options/ViewerOptions.ts:54")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"dataprovider"},"dataProvider"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"dataProvider"),": ",(0,a.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/api.dataproviderbase"},"DataProviderBase")),(0,a.kt)("p",null,"Optional data provider class instance for API and static\nresource requests."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"description"))," The data provider will override the\ndefault MapillaryJS data provider and take responsibility\nfor all IO handling."),(0,a.kt)("p",null,"The data provider takes precedance over the {@link }"),(0,a.kt)("p",null,"A data provider instance must extend\nthe data provider base class."),(0,a.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/viewer/options/ViewerOptions.ts#L69"},"viewer/options/ViewerOptions.ts:69")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"imageid"},"imageId"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"imageId"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"Optional ",(0,a.kt)("inlineCode",{parentName:"p"},"image-id")," to start from. The id\ncan be any Mapillary image. If a id is provided the viewer is\nbound to that id until it has been fully loaded. If null is provided\nno image is loaded at viewer initialization and the viewer is not\nbound to any particular id. Any image can then be navigated to\nwith e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},'viewer.moveTo("<my-image-id>")'),"."),(0,a.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/viewer/options/ViewerOptions.ts#L79"},"viewer/options/ViewerOptions.ts:79")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"imagetiling"},"imageTiling"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"imageTiling"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"Value indicating if the viewer should fetch high resolution\nimage tiles."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"description"))," Can be used when extending MapillaryJS with\na custom data provider. If no image tiling server exists\nthe image tiling can be inactivated to avoid error\nmessages about non-existing tiles in the console."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"default"))," true"),(0,a.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/viewer/options/ViewerOptions.ts#L92"},"viewer/options/ViewerOptions.ts:92")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"rendermode"},"renderMode"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"renderMode"),": ",(0,a.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/viewer.rendermode"},"RenderMode")),(0,a.kt)("p",null,"The render mode in the viewer."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"default"))," ",(0,a.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/viewer.rendermode#fill"},"RenderMode.Fill")),(0,a.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/viewer/options/ViewerOptions.ts#L99"},"viewer/options/ViewerOptions.ts:99")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"sprite"},"sprite"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"sprite"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"A base URL for retrieving a PNG sprite image and json metadata file.\nFile name extensions will be automatically appended."),(0,a.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/viewer/options/ViewerOptions.ts#L105"},"viewer/options/ViewerOptions.ts:105")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"trackresize"},"trackResize"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"trackResize"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"boolean")),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", the viewer will automatically resize when the\nbrowser window resizes."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"default"))," true"),(0,a.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/viewer/options/ViewerOptions.ts#L113"},"viewer/options/ViewerOptions.ts:113")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"transitionmode"},"transitionMode"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"transitionMode"),": ",(0,a.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/viewer.transitionmode"},"TransitionMode")),(0,a.kt)("p",null,"The transtion mode in the viewer."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"default"))," ",(0,a.kt)("a",{parentName:"p",href:"/mapillary-js/api/enums/viewer.transitionmode#default"},"TransitionMode.Default")),(0,a.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/viewer/options/ViewerOptions.ts#L120"},"viewer/options/ViewerOptions.ts:120")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"url"},"url"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"url"),": ",(0,a.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/viewer.urloptions"},"UrlOptions")),(0,a.kt)("p",null,"The URL options."),(0,a.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/cda86647/src/viewer/options/ViewerOptions.ts#L125"},"viewer/options/ViewerOptions.ts:125")))}m.isMDXComponent=!0}}]);