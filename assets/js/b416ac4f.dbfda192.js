(self.webpackChunkmapillary_js_doc=self.webpackChunkmapillary_js_doc||[]).push([[6578],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return p},kt:function(){return y}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(t),y=a,d=m["".concat(s,".").concat(y)]||m[y]||u[y]||o;return t?n.createElement(d,i(i({ref:r},p),{},{components:t})):n.createElement(d,i({ref:r},p))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6184:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return s},default:function(){return p}});var n=t(2122),a=t(9756),o=(t(7294),t(3905)),i={id:"glossary",title:"Glossary"},l={unversionedId:"intro/glossary",id:"intro/glossary",isDocsHomePage:!1,title:"Glossary",description:"This glossary provides a non-exhaustive list of terms used in the MapillaryJS documentation and codebase.",source:"@site/docs/intro/glossary.md",sourceDirName:"intro",slug:"/intro/glossary",permalink:"/mapillary-js/docs/intro/glossary",editUrl:"https://github.com/mapillary/mapillary-js/edit/main/doc/docs/intro/glossary.md",version:"current",frontMatter:{id:"glossary",title:"Glossary"},sidebar:"docs",previous:{title:"Try MapillaryJS",permalink:"/mapillary-js/docs/intro/try"},next:{title:"Guide",permalink:"/mapillary-js/docs/main/guide"}},s=[{value:"Camera Capture",id:"camera-capture",children:[]}],c={toc:s};function p(e){var r=e.components,t=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This glossary provides a non-exhaustive list of terms used in the MapillaryJS documentation and codebase."),(0,o.kt)("h2",{id:"camera-capture"},"Camera Capture"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Image#Still_or_moving"},"Still image")," captured by a ",(0,o.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Camera"},"camera"),". It can be photographs but also frames extracted from a video."))}p.isMDXComponent=!0}}]);