(self.webpackChunkmapillary_js_doc=self.webpackChunkmapillary_js_doc||[]).push([[7419],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,c=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),f=l(r),m=a,d=f["".concat(s,".").concat(m)]||f[m]||u[m]||c;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=r.length,i=new Array(c);i[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var l=2;l<c;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7833:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return i},metadata:function(){return o},toc:function(){return s},default:function(){return p}});var n=r(2122),a=r(9756),c=(r(7294),r(3905)),i={id:"api.meshcontract",title:"Interface: MeshContract",sidebar_label:"MeshContract",custom_edit_url:null},o={unversionedId:"interfaces/api.meshcontract",id:"interfaces/api.meshcontract",isDocsHomePage:!1,title:"Interface: MeshContract",description:"api.MeshContract",source:"@site/api/interfaces/api.meshcontract.md",sourceDirName:"interfaces",slug:"/interfaces/api.meshcontract",permalink:"/mapillary-js/api/interfaces/api.meshcontract",editUrl:null,version:"current",sidebar_label:"MeshContract",frontMatter:{id:"api.meshcontract",title:"Interface: MeshContract",sidebar_label:"MeshContract",custom_edit_url:null},sidebar:"api",previous:{title:"Interface: LngLatAlt",permalink:"/mapillary-js/api/interfaces/api.lnglatalt"},next:{title:"Interface: PointContract",permalink:"/mapillary-js/api/interfaces/api.pointcontract"}},s=[{value:"Properties",id:"properties",children:[{value:"faces",id:"faces",children:[]},{value:"vertices",id:"vertices",children:[]}]}],l={toc:s};function p(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,c.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"/mapillary-js/api/modules/api"},"api"),".MeshContract"),(0,c.kt)("p",null,"Contract describing triangulated meshes."),(0,c.kt)("h2",{id:"properties"},"Properties"),(0,c.kt)("h3",{id:"faces"},"faces"),(0,c.kt)("p",null,"\u2022 ",(0,c.kt)("strong",{parentName:"p"},"faces"),": ",(0,c.kt)("em",{parentName:"p"},"number"),"[]"),(0,c.kt)("p",null,"Flattened array of faces for the mesh. Each face consist\nthree vertex indices."),(0,c.kt)("p",null,"Defined in: ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/00ede70d/src/api/contracts/MeshContract.ts#L9"},"api/contracts/MeshContract.ts:9")),(0,c.kt)("hr",null),(0,c.kt)("h3",{id:"vertices"},"vertices"),(0,c.kt)("p",null,"\u2022 ",(0,c.kt)("strong",{parentName:"p"},"vertices"),": ",(0,c.kt)("em",{parentName:"p"},"number"),"[]"),(0,c.kt)("p",null,"Flattened array of vertices for the mesh. Each vertex\nconsists of X, Y and Z coordinates in the camera\nreference frame."),(0,c.kt)("p",null,"Defined in: ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/00ede70d/src/api/contracts/MeshContract.ts#L16"},"api/contracts/MeshContract.ts:16")))}p.isMDXComponent=!0}}]);