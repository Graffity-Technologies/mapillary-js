(self.webpackChunkmapillary_js_doc=self.webpackChunkmapillary_js_doc||[]).push([[2055],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return i},kt:function(){return y}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},i=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),u=s(r),y=a,d=u["".concat(p,".").concat(y)]||u[y]||m[y]||o;return r?n.createElement(d,c(c({ref:t},i),{},{components:r})):n.createElement(d,c({ref:t},i))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var s=2;s<o;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7494:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return i}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),c={id:"component.rectgeometry",title:"Class: RectGeometry",sidebar_label:"RectGeometry",custom_edit_url:null},l={unversionedId:"classes/component.rectgeometry",id:"classes/component.rectgeometry",isDocsHomePage:!1,title:"Class: RectGeometry",description:"component.RectGeometry",source:"@site/api/classes/component.rectgeometry.md",sourceDirName:"classes",slug:"/classes/component.rectgeometry",permalink:"/mapillary-js/api/classes/component.rectgeometry",editUrl:null,version:"current",sidebar_label:"RectGeometry",frontMatter:{id:"component.rectgeometry",title:"Class: RectGeometry",sidebar_label:"RectGeometry",custom_edit_url:null},sidebar:"api",previous:{title:"Class: PopupComponent",permalink:"/mapillary-js/api/classes/component.popupcomponent"},next:{title:"Class: ScrollZoomHandler",permalink:"/mapillary-js/api/classes/component.scrollzoomhandler"}},p=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Accessors",id:"accessors",children:[{value:"rect",id:"rect",children:[]}]}],s={toc:p};function i(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/mapillary-js/api/modules/component"},"component"),".RectGeometry"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"classdesc"))," Represents a rectangle geometry in the 2D basic image coordinate system."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"example"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"var basicRect = [0.5, 0.3, 0.7, 0.4];\nvar rectGeometry = new RectGeometry(basicRect);\n")),(0,o.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.vertexgeometry"},(0,o.kt)("em",{parentName:"a"},"VertexGeometry"))),(0,o.kt)("p",{parentName:"li"},"\u21b3 ",(0,o.kt)("strong",{parentName:"p"},"RectGeometry")))),(0,o.kt)("h2",{id:"constructors"},"Constructors"),(0,o.kt)("h3",{id:"constructor"},"constructor"),(0,o.kt)("p",null,"+"," ",(0,o.kt)("strong",{parentName:"p"},"new RectGeometry"),"(",(0,o.kt)("inlineCode",{parentName:"p"},"rect"),": ",(0,o.kt)("em",{parentName:"p"},"number"),"[]): ",(0,o.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.rectgeometry"},(0,o.kt)("em",{parentName:"a"},"RectGeometry"))),(0,o.kt)("p",null,"Create a rectangle geometry."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"throws"))," {GeometryTagError} Rectangle coordinates must be valid basic coordinates."),(0,o.kt)("h4",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"rect")),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("em",{parentName:"td"},"number"),"[]"),(0,o.kt)("td",{parentName:"tr",align:"left"},"An array representing the top-left and bottom-right corners of the rectangle in basic coordinates. Ordered according to ","[x0, y0, x1, y1]",".")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns:")," ",(0,o.kt)("a",{parentName:"p",href:"/mapillary-js/api/classes/component.rectgeometry"},(0,o.kt)("em",{parentName:"a"},"RectGeometry"))),(0,o.kt)("p",null,"Overrides: VertexGeometry.constructor"),(0,o.kt)("p",null,"Defined in: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/397e4a32/src/component/tag/geometry/RectGeometry.ts#L20"},"component/tag/geometry/RectGeometry.ts:20")),(0,o.kt)("h2",{id:"accessors"},"Accessors"),(0,o.kt)("h3",{id:"rect"},"rect"),(0,o.kt)("p",null,"\u2022 get ",(0,o.kt)("strong",{parentName:"p"},"rect"),"(): ",(0,o.kt)("em",{parentName:"p"},"number"),"[]"),(0,o.kt)("p",null,"Get rect property."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns:")," ",(0,o.kt)("em",{parentName:"p"},"number"),"[]"),(0,o.kt)("p",null,"Array representing the top-left and bottom-right\ncorners of the rectangle in basic coordinates."),(0,o.kt)("p",null,"Defined in: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/397e4a32/src/component/tag/geometry/RectGeometry.ts#L82"},"component/tag/geometry/RectGeometry.ts:82")))}i.isMDXComponent=!0}}]);