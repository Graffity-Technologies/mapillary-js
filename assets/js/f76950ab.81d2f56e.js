(self.webpackChunkmapillary_js_doc=self.webpackChunkmapillary_js_doc||[]).push([[4425],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return s},kt:function(){return f}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),c=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=c(a),f=r,d=m["".concat(o,".").concat(f)]||m[f]||u[f]||l;return a?n.createElement(d,i(i({ref:t},s),{},{components:a})):n.createElement(d,i({ref:t},s))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var c=2;c<l;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6015:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return i},metadata:function(){return p},toc:function(){return o},default:function(){return s}});var n=a(2122),r=a(9756),l=(a(7294),a(3905)),i={id:"api.lnglatalt",title:"Interface: LngLatAlt",sidebar_label:"LngLatAlt",custom_edit_url:null},p={unversionedId:"interfaces/api.lnglatalt",id:"interfaces/api.lnglatalt",isDocsHomePage:!1,title:"Interface: LngLatAlt",description:"api.LngLatAlt",source:"@site/api/interfaces/api.lnglatalt.md",sourceDirName:"interfaces",slug:"/interfaces/api.lnglatalt",permalink:"/mapillary-js/api/interfaces/api.lnglatalt",editUrl:null,version:"current",sidebar_label:"LngLatAlt",frontMatter:{id:"api.lnglatalt",title:"Interface: LngLatAlt",sidebar_label:"LngLatAlt",custom_edit_url:null},sidebar:"api",previous:{title:"Interface: LngLat",permalink:"/mapillary-js/api/interfaces/api.lnglat"},next:{title:"Interface: MeshContract",permalink:"/mapillary-js/api/interfaces/api.meshcontract"}},o=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Properties",id:"properties",children:[{value:"alt",id:"alt",children:[]},{value:"lat",id:"lat",children:[]},{value:"lng",id:"lng",children:[]}]}],c={toc:o};function s(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/mapillary-js/api/modules/api"},"api"),".LngLatAlt"),(0,l.kt)("p",null,"Interface that represents longitude-latitude-altitude\ncoordinates. Longitude and latitude are measured in degrees\nand altitude in meters. Coordinates are defined in the WGS84 datum."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"interface"))),(0,l.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.lnglat"},(0,l.kt)("em",{parentName:"a"},"LngLat"))),(0,l.kt)("p",{parentName:"li"},"\u21b3 ",(0,l.kt)("strong",{parentName:"p"},"LngLatAlt")))),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"alt"},"alt"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"alt"),": ",(0,l.kt)("em",{parentName:"p"},"number")),(0,l.kt)("p",null,"Altitude, measured in meters."),(0,l.kt)("p",null,"Defined in: ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/bdba74d0/src/api/interfaces/LngLatAlt.ts#L14"},"api/interfaces/LngLatAlt.ts:14")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"lat"},"lat"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"lat"),": ",(0,l.kt)("em",{parentName:"p"},"number")),(0,l.kt)("p",null,"Latitude, measured in degrees."),(0,l.kt)("p",null,"Inherited from: ",(0,l.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.lnglat"},"LngLat"),".",(0,l.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.lnglat#lat"},"lat")),(0,l.kt)("p",null,"Defined in: ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/bdba74d0/src/api/interfaces/LngLat.ts#L9"},"api/interfaces/LngLat.ts:9")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"lng"},"lng"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"lng"),": ",(0,l.kt)("em",{parentName:"p"},"number")),(0,l.kt)("p",null,"Longitude, measured in degrees."),(0,l.kt)("p",null,"Inherited from: ",(0,l.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.lnglat"},"LngLat"),".",(0,l.kt)("a",{parentName:"p",href:"/mapillary-js/api/interfaces/api.lnglat#lng"},"lng")),(0,l.kt)("p",null,"Defined in: ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/mapillary/mapillary-js/blob/bdba74d0/src/api/interfaces/LngLat.ts#L14"},"api/interfaces/LngLat.ts:14")))}s.isMDXComponent=!0}}]);